spring:
  rabbitmq:
    host: "{cipher}AQARyct3yZgo6aWbhtM7g1UcqeIMSQsbqMATx1HNxi8z+ifuGeR4qRzFGqfD2VsG7VDz8R2Frf/Ock/iPJ8EfwLTc+UzuLvFHKzyUOKOD8mPci18nM3tVQgSMR2Z68WYuEkOJi+NoTSVM7oJbR3qn8uPXM/ixt/p8i0qHJjfg1oXLBXfTWbmYqySJoEvxjZDjy/L9pMepcecDHFKm2lMpadEhVEm6M91T5XrMPvVE0qUk+y9T7LCuM9HLlMEISomD9fKKa8Iv8zNViJP+uV8vghVq/4X9JE9eyrXMbIBMvKEV4u2Bx1dtR0IhlIUNfKLO3BDttKKxiH5LWWMGy9CIgWKmHHQp8GEeCjhz8XmqCMRo+L+8g4AQhnOU5aVeMaJKQg="
    port: "{cipher}AQDDpE9CKBZsHHoiGMAqTYIJFvKvxVNL3a9ekF+V9X6aLS8cDmilX0RvDNBB4Z4LdRej/u7Bl2Cz10IhH7cVvaKZ51irxBuweZA5rOpWjpWy+xvRLeeXFGx2gUU4kh8uMawTxbqT3RkAr7SHod9RQBDfBJE6urI4zqaAphkV5SMALSmNWZYPvmJnCfqxBWSe9fS5MMIiQAjLDFM3nQIAXxCGeuoUbmMd7zDShLNyowwEucaYjR4NPukPHTpR/SuaCD7fqnJugYUs9ZcbxTCZL5GDM+Xmi2XQRZD3Tcb80SVwEONVHJoazfBM+MJaKyv5bZTPBz5W8DIN7QyqRYZMqe9eVb9KFrPIeM5Ss9ASG1k2s1wL832/uwz/4RtEDtN3ejg="
    username: "{cipher}AQBF0r9MbjjnEM2WXw47DNoh58UVDr5M5S5bfg+MS6hiP0FD4IbRzG9ber6m/afHw8WjakeCnnhmSdJNqCllH+HW1mD/Ng+wmV0e+qODEITjzjEWoC9OGlTJLTgFsuPOnhf7kb3q6Sgjyxno+Opr+9n1IyUfwZeyNwuep2rzBlNrLXdqBCBsUakp545nFKw49H98wn1LzwfYTqBIcgahLVgIeHsyHIoZI3EGRTjsxIfM/lonYpv2M0OqRWPxw/5ExcVf2SFZR6Gag4H5K5JBgrjLV3f3zP/6nnV1I+wykv7y142AoJuusLHulecibg8fnBaXIr1hUldG9eAXWWxaHh464u1ExKyiIwvFW5N221wzaDCZ6gp6CrjV1aQ8rjDrD+g="
    password: "{cipher}AQBFv728T3k70MZOvHaKV+5/8YqVUZioQuyamLV2H6vxA72nMIxy5Q2pANC+jwKu8e7xHa3ofryLeCVXDOySA9wPXDN02P4T/i9bVsA8+S8WCDd+YV9U9hM9J9RWDH1IgmiemrcLwqPKpwiPzUpWRo8SITYTlGOoOz7cVI6Nx0B3pFcwFrHYB8jwUQFIskbVVTaGMBed3Yt8vBsDVmVySvUo2zn8InrRgqofdq77Oj5F3n5kZ02rRT55JvDOiErPDikad9vtFxphA6jJzfGhuO0T4h0ogcF8myR6aGJSGBOW4IM2ow1DsZQktO0HOjNl5otlvsyk/4dlRJEY7OHks3/MYqV1rUf/m2c41d7Lbkbm3VlCw3+agUSMlxfgaQTEjxw="
  redis:
    host: "{cipher}AQAbHK9dcvo0R8pVBTb332LJXp7Zer8EarGfgkwieBmpwcjX+5OJLFVhQwi+QkfTBMYx9i3RLGG1bdbhJ14qBHFmcKytxwidcn3vbMwn0u4mc7X6wf194Vn10UqgEJwq/rpEQrP0dBRGNmND//apbiUmi29M8nn18YI9CNkVfssKZ+8h+yPGJdS38KIAc1OCrDe9Qcvoe6zXOUj4rdpE78TePKF9+3QSGZoKt4TvQ8XqrpuSsGDXkbarVf0HxmVSpiPKAEHApAPExqNcxbOW2cMm1/63mG2+/eUuiRROWNguNjdFvB3ghN1P8nV1nh486MT6wrsEGY0A4GIIBuGlI//OoNM4D9I2Sr2CJjB1blg5Yp4fsbqSSn3yb5PsOZNMnak="
    port: "{cipher}AQC/f3twfBlaoJ4/vYKE/J0/EC3HOXlA48mtsEfOoac/9VtWkJUvTm7NSZZKsGBSa7QwI4upjxJYtiLjpUv+sPaIAMCwtFasCpoSFlYeN9wbhRB4Btm5qwU7Fnm89kUe0a5FHTDqAkIAe50/2zhyKh17jZNOR8KTy6ePLgRh6aoqBM6GB00QjkyGDBeIpOx+AALbum/oUn9EKg3zhygoFtxF25JllwoxfSy5sISUP2fMS74xqKJEMrN/lHfo8Kv7vncBP4U+rQffBKWDlDAc9MVQ0zL54ZwnoZlHMD0n0I+d0+qZYGSnNsM7xeDZA7vE4HiMqesEIi5vPhgwZN0w4qJGNWQaCceSAJS6DDLDwc2x3BAhykcvQgIzj3Lge+MXvh8="
  cloud:
    config:
      import:
        - classpath:/bootstrap.yml
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins:
              - 'http://localhost:3000'
              - 'http://localhost:8080'
            allow-credentials: true
            allowedHeaders: '*'
            exposedHeaders: '*'
            allowedMethods:
              - PUT
              - GET
              - POST
              - PATCH
              - DELETE
              - OPTIONS
      routes:
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/login
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/signup
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/regenerateToken
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/logout
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/mail/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/actuator/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/user/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/evaluation/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
        - id: club-service
          uri: lb://CLUB-SERVICE
          predicates:
            - Path=/club-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/club-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
        - id: chatting-service
          uri: lb://CHATTING-SERVICE
          predicates:
            - Path=/chatting-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/chatting-service/(?<segment>.*), /$\{segment}
        - id: board-service
          uri: lb://BOARD-SERVICE
          predicates:
            - Path=/board-service/clubs/{club-id}/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/board-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
            - ClubMemberAuthorizationFilter
        - id: board-service
          uri: lb://BOARD-SERVICE
          predicates:
            - Path=/board-service/users/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/board-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
        - id: schedule-service
          uri: lb://SCHEDULE-SERVICE
          predicates:
            - Path=/schedule-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/schedule-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter


management:
  endpoints:
    web:
      exposure:
        include: health
